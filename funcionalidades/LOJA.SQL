


--====================================CLIENTE================================================--
-- REGISTRAR LOJA
CREATE OR REPLACE FUNCTION REGISTRAR_LOJA(
	USUARIO VARCHAR, 
	SENHA VARCHAR, 
	NOME VARCHAR, 
	DESCRICAO VARCHAR
) RETURNS VOID AS $$ 
BEGIN
	IF (USUARIO IS NULL) THEN
		RAISE EXCEPTION 'O VALOR USUARIO NÃO PODE SER NULO, INFORME O USUARIO (ARGUMENTO NA POSICAO 0)';
	ELSIF (SENHA IS NULL) THEN
		RAISE EXCEPTION 'O VALOR SENHA NÃO PODE SER NULO, INFORME UMA SENHA (ARGUMENTO NA POSICAO 1)';
	ELSIF (NOME IS NULL) THEN
		RAISE EXCEPTION 'O VALOR NOME NÃO PODE SER NULO, INFORME O NOME (ARGUMENTO NA POSICAO 2)';
	ELSIF (DESCRICAO IS NULL) THEN
		RAISE EXCEPTION 'O VALOR DESCRICAO NÃO PODE SER NULO, INFORME UMA DESCRICAO (ARGUMENTO NA POSICAO 3)';
	ELSIF (LENGTH(USUARIO) < 3) THEN
		RAISE EXCEPTION 'O VALOR USUÁRIO DEVE TER PELO MENOS 3 CARACTERES';
	ELSIF (LENGTH(SENHA) < 6) THEN
		RAISE EXCEPTION 'A SENHA DEVE TER PELO MENOS 6 CARACTERES';
	ELSIF (LENGTH(NOME) < 3) THEN
		RAISE EXCEPTION 'O NOME DEVE TER PELO MENOS 3 CARACTERES';
	END IF;
	
	INSERT INTO LOJA 
		(USUARIO, SENHA, NOME, DESCRICAO)
	VALUES 
		(USUARIO, SENHA, NOME, DESCRICAO);
		
	RAISE INFO 'LOJA REGISTRADA COM SUCESSO!';
END;
$$ LANGUAGE PLPGSQL;


-- VERIFICAR LOJA
CREATE OR REPLACE FUNCTION VERIFICA_EXISTENCIA_DE_LOJA(LOJA_ID INT)
RETURNS BOOLEAN AS $$
DECLARE
    QTD_RESULTADOS INT;
BEGIN
    IF (LOJA_ID IS NULL) THEN
        RAISE EXCEPTION 'INFORME O ID DA LOJA';
    END IF;
    
    SELECT COUNT(ID_LOJA) FROM LOJA 
    WHERE ID_LOJA = LOJA_ID
    INTO QTD_RESULTADOS;

    RETURN QTD_RESULTADOS > 0;
END;
$$ LANGUAGE PLPGSQL;


-- BUSCAR ID LOJA
CREATE OR REPLACE FUNCTION SELECIONAR_ID_LOJA_POR_USUARIO(USUARIO_VAR VARCHAR)
RETURNS INT AS $$
DECLARE
	ID_CLIENTE_RETORNO INTEGER;
BEGIN
	ID_LOJA_RETORNO = (SELECT ID_LOJA FROM LOJA WHERE USUARIO = USUARIO_VAR);
	RETURN ID_LOJA_RETORNO;
END $$ LANGUAGE PLPGSQL;
