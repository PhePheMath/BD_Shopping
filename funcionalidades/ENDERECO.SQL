
--======================================ENDERECO==========================================--
-- REGISTRAR ENDERECO
CREATE OR REPLACE FUNCTION REGISTRAR_ENDERECO_NO_BANCO_DE_DADOS(
	CEP VARCHAR,
	RUA VARCHAR,
	NUMERO INT,
	COMPLEMENTO VARCHAR,
	CIDADE VARCHAR,
	UF VARCHAR
)
RETURNS INT AS $$ 
DECLARE
ENDEREC_ID INT;
BEGIN
	INSERT INTO ENDERECO(CEP, RUA, NUMERO, COMPLEMENTO, CIDADE, UF)
	VALUES (CEP, RUA, NUMERO, COMPLEMENTO, CIDADE, UF)
	RETURNING ID_ENDERECO INTO ENDEREC_ID;
	RAISE INFO 'ENDERECO REGISTRADO COM SUCESSO!';
	RETURN ENDEREC_ID;
END 
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE FUNCTION NOVO_PEDIDO(CLIENTE_ID INT, ENDERECO_ID INT, FORMA_PAGAMENTO INT) 
RETURNS VOID AS $$
DECLARE
    EXISTE_PRODUTOS_NO_CARRINHO BOOLEAN;
    TOTAL_DO_PEDIDO FLOAT;
    PEDIDO_ID INT;
BEGIN

    EXISTE_PRODUTOS_NO_CARRINHO := HA_PRODUTOS_NO_CARRINHO_DO_CLIENTE(CLIENTE_ID);

    IF (EXISTE_PRODUTOS_NO_CARRINHO = FALSE) THEN
        RAISE EXCEPTION 'NÃO HÁ PRODUTOS NO CARRINHO DO CLIENTE INFORMADO';
    ELSE
        IF (VERIFICA_EXISTENCIA_DE_CLIENTE(CLIENTE_ID) = FALSE) THEN
            RAISE EXCEPTION 'CLIENTE INFORMADO NÃO ENCONTRADO';
        ELSIF (ENDERECO_EXISTE(ENDERECO_ID) = FALSE) THEN
            RAISE EXCEPTION 'ENDERECO INFORMADO NÃO ENCONTRADO';
        ELSE
            TOTAL_DO_PEDIDO := VALOR_TOTAL_DO_PEDIDO(CLIENTE_ID);
            PERFORM DECREMENTAR_ESTOQUE_DOS_PRODUTOS_DO_PEDIDO(CLIENTE_ID);

            INSERT INTO PEDIDO(VALOR, STATUS_VENDA, FORMA_DE_PAGAMENTO, PROTOCOLO_PAGAMENTO, DATA_COMPRA, DATA_PAGAMENTO, DATA_ENVIO, DATA_ENTREGA, ID_ENDERECO, ID_CLIENTE)
            VALUES (TOTAL_DO_PEDIDO, 0, 1, '', CURRENT_DATE, NULL, NULL, NULL, ENDERECO_ID, CLIENTE_ID) 
            RETURNING ID_PEDIDO INTO PEDIDO_ID;

            PERFORM COPIAR_PRODUTOS_DO_CARRINHO_PARA_PEDIDO(CLIENTE_ID, PEDIDO_ID);
            PERFORM RESETAR_PRODUTOS_DO_CARRINHO_DO_CLIENTE(CLIENTE_ID);
            RAISE INFO 'PEDIDO REGISTRADO COM SUCESSO';
        END IF;
    END IF;

END;
$$ LANGUAGE PLPGSQL;


-- VERIFICAR ENDERECO
CREATE OR REPLACE FUNCTION ENDERECO_EXISTE(ENDERECO_ID INT) 
RETURNS BOOLEAN AS $$
DECLARE
    QTD_RESULTADOS INT;
BEGIN

    SELECT COUNT(ID_ENDERECO) FROM ENDERECO 
    WHERE ID_ENDERECO = ENDERECO_ID
    INTO QTD_RESULTADOS;

    RETURN QTD_RESULTADOS > 0;

END;
$$ LANGUAGE PLPGSQL;
