/* REQUISITOS */

-- 1 - A função principal deve receber os dados do cliente e do cartão como argumento
-- 2 - A função deve registrar de todos os dados estão satisfeitos para o registro no banco e dados
-- 3 - O CPF do endereço informadop deve conter pelo menos 11 caracteres
-- 4 - O CEP do endereço informadop deve conter pelo menos 8 caracteres
-- 5 - O número da casa não pode ser negativo
-- 6 - A unidade federativa deve conter 2 caracteres

/* FUNÇÕES NECESSÁRIAS PARA A RESOLUÇÃO */

-- REGISTRAR_CLIENTE_COM_ENDERECO(NOME VARCHAR, USUARIO VARCHAR, SENHA VARCHAR, CPF VARCHAR, CEP VARCHAR, RUA VARCHAR, NUMERO INT, COMPLEMENTO VARCHAR, CIDADE VARCHAR, UF VARCHAR )    -> VOID (ESTA É A FUNÇÃO PRINCIPAL)
-- REGISTRAR_CLIENTE_NO_BANCO_DE_DADOS(NOME VARCHAR, USUARIO VARCHAR, SENHA VARCHAR, CPF VARCHAR, ID_ENDERECO INT )                                                                     -> INT
-- REGISTRAR_ENDERECO_NO_BANCO_DE_DADOS(CEP VARCHAR, RUA VARCHAR, NUMERO INT, COMPLEMENTO VARCHAR, CIDADE VARCHAR, UF VARCHAR )                                                         -> INT

--===========================================================================================--
CREATE OR REPLACE FUNCTION REGISTRAR_CLIENTE_COM_ENDERECO(
	-- Cliente
	NOME VARCHAR,
	USUARIO VARCHAR,
	SENHA VARCHAR,
	CPF VARCHAR,
	-- Endereco
	CEP VARCHAR,
	RUA VARCHAR,
	NUMERO INT,
	COMPLEMENTO VARCHAR,
	CIDADE VARCHAR,
	UF VARCHAR
) RETURNS VOID AS $$
DECLARE
	ID_ENDEREC INT;
BEGIN 
	IF (NOME IS NULL) THEN
		RAISE EXCEPTION 'INFORME O NOME DO CLIENTE';
	ELSIF (USUARIO IS NULL) THEN 
		RAISE EXCEPTION 'INFORME O USUARIO DO CLIENTE';
	ELSIF (SENHA IS NULL) THEN 
		RAISE EXCEPTION 'INFORME A SENHA DO CLIENTE';
	ELSIF (CPF IS NULL) THEN 
		RAISE EXCEPTION 'INFORME O CPF DO CLIENTE';
	ELSIF (CEP IS NULL) THEN 
		RAISE EXCEPTION 'INFORME O CEP DO ENDERECO';
	ELSIF (RUA IS NULL) THEN
		RAISE EXCEPTION 'INFORME A RUA DO ENDERECO';
	ELSIF (NUMERO IS NULL) THEN
		RAISE EXCEPTION 'INFORME O NUMERO DO ENDERECO';
	ELSIF (COMPLEMENTO IS NULL) THEN
		RAISE EXCEPTION 'INFORME O COMPLEMENTO DO ENDERECO';
	ELSIF (CIDADE IS NULL) THEN
		RAISE EXCEPTION 'INFORME A CIDADE DO ENDERECO';
	ELSIF (UF IS NULL) THEN
		RAISE EXCEPTION 'INFORME A UNIDADE FEDERATIVA (UF) DO ENDERECO';
	-- REGRAS DE NEGOCIO 
	ELSIF (LENGTH(CPF) != 11) THEN
		RAISE EXCEPTION 'O CPF DEVE CONTER 11 CARACTERES';
	ELSIF (LENGTH(CEP) != 8) THEN
		RAISE EXCEPTION 'O CEP DEVE CONTER 8 CARACTERES';
	ELSIF (NUMERO < 0) THEN
		RAISE EXCEPTION 'O NUMERO NAO PODE SER NEGATIVO';
	ELSIF (LENGTH(UF) != 2) THEN
		RAISE EXCEPTION 'A UNIDADE FEDERATIVA DEVE CONTER 2 CARACTERES';
	ELSE
		ID_ENDEREC := (REGISTRAR_ENDERECO_NO_BANCO_DE_DADOS(CEP, RUA, NUMERO, COMPLEMENTO, CIDADE, UF));
		PERFORM REGISTRAR_CLIENTE_NO_BANCO_DE_DADOS(NOME, USUARIO, SENHA, CPF, ID_ENDEREC);
		RAISE INFO 'CLIENTE REGISTRADO NO BANCO DE DADOS COM ENDEREÇO';
	END IF;
END;
$$  LANGUAGE PLPGSQL;

--===========================================================================================--
CREATE OR REPLACE FUNCTION REGISTRAR_CLIENTE_NO_BANCO_DE_DADOS(
	NOME VARCHAR,
	USUARIO VARCHAR,
	SENHA VARCHAR,
	CPF VARCHAR,
	ID_ENDERECO INT
)
RETURNS VOID AS $$ 
BEGIN
	INSERT INTO CLIENTE(NOME, USUARIO, SENHA, CPF, ID_ENDERECO)
	VALUES (NOME, USUARIO, SENHA, CPF, ID_ENDERECO);
	RAISE INFO 'CLIENTE REGISTRADO COM SUCESSO!';
END 
$$ LANGUAGE PLPGSQL;

--===========================================================================================--
CREATE OR REPLACE FUNCTION REGISTRAR_ENDERECO_NO_BANCO_DE_DADOS(
	CEP VARCHAR,
	RUA VARCHAR,
	NUMERO INT,
	COMPLEMENTO VARCHAR,
	CIDADE VARCHAR,
	UF VARCHAR
)
RETURNS INT AS $$ 
DECLARE
ENDEREC_ID INT;
BEGIN
	INSERT INTO ENDERECO(CEP, RUA, NUMERO, COMPLEMENTO, CIDADE, UF)
	VALUES (CEP, RUA, NUMERO, COMPLEMENTO, CIDADE, UF)
	RETURNING ID_ENDERECO INTO ENDEREC_ID;
	RAISE INFO 'ENDERECO REGISTRADO COM SUCESSO!';
	RETURN ENDEREC_ID;
END 
$$ LANGUAGE PLPGSQL;
