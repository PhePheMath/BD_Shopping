/* REQUISITOS */

-- 1 - A função principal deve rececber os dados do cartão e o usuario do cliente
-- 2 - Deve se obter o id_cliente com base no usuário do cliente
-- 3 - Deve-se verificar se todos os dados são validos
-- 4 - Os digitos do cartçao deve conter pelo menos 4 carcteres
-- 5 - A validade do cartão deve conter pelo menos 5 caracteres

/* FUNÇÕES NECESSAŔIAS PARA A RESOLUÇÃO */

-- ADICIONAR_CARTAO_AO_PERFIL(TITULAR VARCHAR, DIGITOS VARCHAR, VALIDADE VARCHAR, CSV VARCHAR, SAVE BOOLEAN, USUARIO VARCHAR )      -> VOID (ESTA É A FUNÇÃO PRINCIPAL)
-- SELECIONAR_ID_CLIENTE_POR_USUARIO(USUARIO_VAR VARCHAR)                                                                           -> INT

--===================================================================================
CREATE OR REPLACE FUNCTION ADICIONAR_CARTAO_AO_PERFIL(
	TITULAR VARCHAR,
	DIGITOS VARCHAR,
	VALIDADE VARCHAR,
	CSV VARCHAR,
	SAVE BOOLEAN,
	USUARIO VARCHAR
) RETURNS VOID AS $$
DECLARE 
	IS_SAVE BOOLEAN;
	ID_CLIENTE INTEGER;
BEGIN 
	IF (TITULAR IS NULL) THEN
		RAISE EXCEPTION 'INFORME O TITULAR DO CARTAO';
	ELSIF (DIGITOS IS NULL) THEN
		RAISE EXCEPTION 'INFORME OS DIGITOS DO CARTAO';
	ELSIF (VALIDADE IS NULL) THEN
		RAISE EXCEPTION 'INFORME A VALIDADE DO CARTAO';
	ELSIF (CSV IS NULL) THEN
		RAISE EXCEPTION 'INFORME O CSV DO CARTAO';
	ELSIF (USUARIO IS NULL) THEN
		RAISE EXCEPTION 'INFORME O USUÁRIO DONO DO CARTAO';
	-- REGRAS DE NEGOCIO
	ELSIF (LENGTH(DIGITOS) != 4) THEN
		RAISE EXCEPTION 'DIGITO DEVE CONTER 4 CARACTERES';
	ELSIF (LENGTH(VALIDADE) != 5) THEN
		RAISE EXCEPTION 'VALIDADE DEVE CONTER 5 CARACTERES';
	ELSIF (SAVE IS NULL) THEN
		IS_SAVE = FALSE;
	ELSE
		ID_CLIENTE := SELECIONAR_ID_CLIENTE_POR_USUARIO(USUARIO);
		
		IF (ID_CLIENTE IS NULL) THEN
			RAISE EXCEPTION 'USUARIO NAO CADASTRADO, VERIFIQUE O USUARIO INFORMADO E TENTE NOVAMENTE';
		ELSE
			INSERT INTO CARD(TITULAR, DIGITOS, VALIDADE, CSV, SAVE, ID_CLIENTE)
			VALUES (TITULAR, DIGITOS, VALIDADE, CSV, IS_SAVE, ID_CLIENTE);
			RAISE INFO 'CARTAO ADICIONADO COM SUCESSO AO CLIENTE';
		END IF;
	END IF;
END $$ LANGUAGE PLPGSQL;

--===================================================================================
CREATE OR REPLACE FUNCTION SELECIONAR_ID_CLIENTE_POR_USUARIO(USUARIO_VAR VARCHAR)
RETURNS INT AS $$
DECLARE
	ID_CLIENTE_RETORNO INTEGER;
BEGIN
	ID_CLIENTE_RETORNO = (SELECT ID_CLIENTE FROM CLIENTE WHERE USUARIO = USUARIO_VAR);
	RETURN ID_CLIENTE_RETORNO;
END $$ LANGUAGE PLPGSQL;

