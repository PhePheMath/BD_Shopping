

--====================================ESTOQUE==============================================--
-- VERIFICAR ESTOQUE
CREATE OR REPLACE FUNCTION VERIFICAR_ESTOQUE_DO_PRODUTO(PRODUTO_LOJA_ID INT, QTD INT)
RETURNS BOOLEAN AS $$
DECLARE
    HA_ESTOQUE BOOLEAN DEFAULT FALSE;
BEGIN
    SELECT QUANTIDADE >= QTD FROM PRODUTO_LOJA 
    WHERE ID_PRODUTO_LOJA = PRODUTO_LOJA_ID 
    INTO HA_ESTOQUE;

    RETURN HA_ESTOQUE;
END;
$$ LANGUAGE PLPGSQL;


CREATE OR REPLACE FUNCTION ADICIONAR_PRODUTO_NA_LOJA(PRODUTO_ID INT, LOJA_ID INT, PRECO FLOAT, QUANTIDADE INT)
RETURNS VOID AS $$
DECLARE
    PRODUTO_EXISTE BOOLEAN;
    LOJA_EXISTE BOOLEAN;
BEGIN

    PRODUTO_EXISTE := VERIFICA_EXISTENCIA_DE_PRODUTO(PRODUTO_ID);
    LOJA_EXISTE := VERIFICA_EXISTENCIA_DE_LOJA(LOJA_ID);

    IF (PRODUTO_EXISTE = FALSE) THEN
        RAISE EXCEPTION 'PRODUTO NÃO ENCONTRADO';
    ELSIF (LOJA_EXISTE = FALSE) THEN
        RAISE EXCEPTION 'LOJA NÃO ENCONTRADA';
    ELSIF (PRECO IS NULL) THEN
        RAISE EXCEPTION 'INFORME O PREÇO DO PRODUTO';
    ELSIF (QUANTIDADE IS NULL) THEN
        RAISE EXCEPTION 'INFORME O QUANTIDADE DO PRODUTO EM ESTOQUE';
    ELSIF (PRECO < 0) THEN
        RAISE EXCEPTION 'O PREÇO DO PRODUTO NÃO PODE SER NEGATIVO';
    ELSIF (QUANTIDADE < 0) THEN
        RAISE EXCEPTION 'A QUANTIDADE EM ESTOQUE NÃO PODE SER NEGATIVO';
    ELSE
        INSERT INTO PRODUTO_LOJA(ID_PRODUTO, ID_LOJA, PRECO_PRODUTO, QUANTIDADE)
        VALUES (PRODUTO_ID, LOJA_ID, PRECO, QUANTIDADE);

        RAISE INFO 'PRODUTO ADICIONADO A LOJA INFORMADA';
    END IF;
    
END;
$$ LANGUAGE PLPGSQL;
